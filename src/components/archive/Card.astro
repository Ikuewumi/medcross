---
import demo from "../../images/css.png";
import {type CollectionEntry, getEntry} from "astro:content"


export interface Props {
	data: CollectionEntry<'crossword'> 
	
}

const {data} = Astro.props as Props;
const author = (await getEntry('author', data.author.id)).data;


---



<div class="card">
	<figure>
		<img src={data.image} width="160" height="90" alt="Home Page" />
	</figure>
	<div class="content">
		<a class="category" href="/"><span class="crossword-tag">{data.categories[0]}</span></a>
		<a class="link" href={`/crossword/${data.slug}`}><h2>{data.title}</h2></a>
		<div class="author">
			<p>By <strong>{author.name}</strong></p>
		</div>
		<p>{data.description}</p>	
	</div>
</div>



<style lang="scss">
.card {
	
	


	display: grid;
	background-color: hsl(0deg 0% 100% / 0.8);
	border: 1px solid var(--clr-grey-800);
	border-radius: var(--radius);
	color: var(--clr-grey-400);
	box-shadow: var(--shadow-elevation-low);
	
}



.card > figure {

	width: 100%;
	aspect-ratio: 16 / 9;
	padding: 0.65rem 0.75rem;

	& > img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		border-radius: var(--radius);
		border: 1px solid var(--clr-grey-700);
	}

}





.card > .content {

	padding-inline: 0.75rem;
	padding-block-end: 1.25rem;
	display: grid;
	align-items: start;
	gap: 0.25rem;


	span.crossword-tag {
		--font-weight: 700;
		--font-size: var(--step-0);
	}


	a {
		display: flex;

	}

	a.link {
		color: var(--clr-grey-400);
		text-decoration: none;
		letter-spacing: -1.5px;
		margin-top: 0.25rem;

		&:hover, &:focus {
			text-decoration: underline;
			text-decoration-color: #2fd72f;
			outline: none;
		}
	}

	h3 {
		line-height: 0.9;
		
	}



	.author {
		margin-top: 0.25rem;
		color: var(--clr-grey-500);
		letter-spacing: 0px;


		strong {
			font-style: italic;
		}
	}



	p {
		line-height: 1.4;
	}

 
}




</style>
