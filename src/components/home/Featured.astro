---
import FeaturedCrossword from "./FeaturedCrossword.astro";
import FeaturedCard from "./FeaturedCard.astro"
import { getEntry } from "astro:content";

const featured = await getEntry('featured', 'featured');
const featuredData = await Promise.all(featured.data.featured.map(async(d) => {
    const crossword = await getEntry('crossword', d.slug)
    const category = await getEntry('category', crossword.data.category.id);


    return {
        image: crossword.data.image,
        category: category.data.name,
        categorySlug: category.id,
        title: crossword.data.title,
        slug: crossword.slug
    }
}));




---



<section id="featured" class="grid-setup">
    <div role="presentation">

        <FeaturedCrossword 
            title={featuredData[0].title}
            link={`/crossword/${featuredData[0].slug}`}
            category={featuredData[0].category}
            categoryLink={`/category/${featuredData[0].categorySlug}`}
            image={featuredData[0].image}
         
        />
        
        <article class="more-crosswords">
            <h2 class="sr-only">More..</h2>
            
            <ul class="more-crosswords-list">
                { featuredData.slice(1).map(data => {
                        return ( 
                            <li>
                                <FeaturedCard 
                                    title={data.title} 
                                    category={data.category} 
                                    url={`/crossword/${data.slug}`}  
                                    categoryUrl={`/category/${data.categorySlug}`} 
                                />
                            </li>
                        )
                }) }

            </ul>



            <a class="to-all crossword-tag" href="/archive">To All Croswords...</a>
    </div>


    <svg aria-hidden="true" class="featured-section-logo">
        <use href="#logo"></use>
    </svg>

    </article>
</section>

<style lang="scss">
    #featured {
        grid-column: content;
        background: var(--clr-grey-900);
        padding: 1rem 0;
        border-radius: 0.4rem;
        box-shadow: var(--shadow-elevation-low);
        position: relative;
        isolation: isolate;

        & > div[role=presentation] {
            display: flex;
            flex-direction: column;
            gap: 2.5rem 1.5rem;
        }
        
        @media (min-width:768px) {
            & > div[role=presentation] {
                flex-direction: row;
            }
        }
    }

    svg.featured-section-logo {
        position: absolute;
        inset: 2rem 2rem auto auto;
        width: 50ch;
        aspect-ratio: 1;
        z-index: -1;
        color: #00000005;
        fill: currentColor;
        transform: rotate(5deg);
    }

    ul {
        list-style: none;
    }


    article.more-crosswords {
        flex: 1;
        display: grid;
        gap: 1.5rem;

        & > ul.more-crosswords-list {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            gap: 1rem;


        }

        & > a.to-all.crossword-tag {
            width: fit-content;
            --clr-3: #232323;
            --clr-4: #7b7c7b;
            --clr-5: #959795;
            --font-size: var(--step-2);
            --drop-shadow: none;
            margin-bottom: 1.25rem;
            margin-inline-start: auto;
            text-decoration: underline;
            text-decoration-thickness: 2px;
            text-decoration-color: var(--clr-4);
        }


        @media (min-width: 768px) {
            padding-block: 0.2rem;


            & > ul {
                flex-direction: column;
            }
        }



    }

    

    article {
    }
</style>
