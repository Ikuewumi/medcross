---
import SeriesCard from "../../components/crossword/SeriesCard.astro";
import type { Word } from "../../composables/engine";
import CrosswordLayout from "../../layouts/CrosswordLayout.astro";
import { getCollection, getEntry, type CollectionEntry } from 'astro:content';
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection('crossword');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}


// 2. For your template, you can get the entry directly from the prop
const { entry } = Astro.props;
const category = (await getEntry('category', entry.data.categories.id));
const author = (await getEntry('author', entry.data.author.id));
const series = await getCollection('series', ({ data }) => {
  return data.crosswords.findIndex((c:CollectionEntry<"series">["data"]["crosswords"]) => c.slug === entry.slug) !== -1
})


if (series.length > 1) throw Error(`the item ${entry.id} is included in more than one series`)

---
<Fragment>
  <CrosswordLayout 
    title={entry.data.title} 
    description={entry.data.description ?? ''}
    image={entry.data.image}
    author={author.data.name}
    authorImage={author.data.image}
    categories={category.data.name}
    date={entry.data.date}
    size={entry.data.size}
    words={entry.data.words as Word[]}>
    {series.length > 0 ? <SeriesCard currentSlug={entry.slug} series={series[0]} /> : ""}
  </CrosswordLayout>

    

</Fragment>
