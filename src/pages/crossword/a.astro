---
import BaseLayout from "../../layouts/BaseLayout.astro";
import CrosswordPage from "../../components/CrosswordPage.svelte";
import MetaInformation from "../../components/MetaInformation.astro";
import type { CrossFull } from "../../composables/engine";
import { encodeString } from "../../composables/text";
import "../../styles/css-gram.css";

const data: CrossFull = {
    size: 8,
    words: [
        {
            word: "AORTA",
            start: [0, 0],
            end: [4, 0],
            meaning: "The largest artery in the body",
        },
        {
            word: "OS",
            start: [0, 4],
            end: [0, 5],
            meaning: "an opening of the cervix",
        },
        {
            word: "SPLEEN",
            start: [0, 5],
            end: [5, 5],
            meaning: "the biological blood blank",
        },
        {
            word: "CRANIUM",
            start: [1, 2],
            end: [7, 2],
            meaning: "protective skeleton for the brain",
        },
        {
            word: "TRACHEA",
            start: [3, 0],
            end: [3, 6],
            meaning: "larynx, _______, bronchi",
        },
        {
            word: "RIB",
            start: [5, 1],
            end: [5, 3],
            meaning: "a bone that surrounds the lungs",
        },
        {
            word: "LYMPH",
            start: [7, 0],
            end: [7, 4],
            meaning: "carries fats into the blood stream",
        },
    ],
    author: "Ayobami",
    title: "Anatomy Galore",
    description:
        "Lorem ipsum, dolor sit amet consectetur adipisicing elit. Facere neque, excepturi consequuntur omnis magnam labore non. Nulla quod odit consequuntur?",
    image: "https://i.ibb.co/ZBVqsWs/image.png",
    category: ["anatomy"],
    date: Date.now(),
};


---

<BaseLayout title={data.title}>
    <Fragment slot="meta">
        <MetaInformation
            title={data.title}
            description={data.description}
            image={data.image}
            content="website"
        />
    </Fragment>

    <section class="grid-setup" id="crossword-page">
        <figure class="image earlybird" data-page="crossword" data-game-element="false">
            <img src={data.image} alt={data.title}  />
        </figure>
        
        <ul class="categories" data-page="crossword" data-game-element="false">
            {data.category.map(category => {
                return (<li>#{category}</li>)
            })}
        </ul>
        
        <h1 data-page="crossword" data-game-element="false">{data.title}</h1>

        <article class="author" data-page="crossword" data-game-element="false">
            <figure class="author-image earlybird">
                <img src={data.image} alt={data.author}>
            </figure>

            <p>By <strong>{data.author}</p>
        </article>

        <p data-page="crossword" data-game-element="false">{data.description}</p>



        <CrosswordPage enc={encodeString(JSON.stringify(data))} client:only  />
    </section>


</BaseLayout>

<style lang="scss">
section {
    --_spacer: 0.75rem;
    grid-column: full;
    gap: 0.75rem 0;
    padding-bottom: 2rem;


    figure.image {
        grid-column: content;
        background: var(--clr-white);
        height: min(300px, 45vh);
        overflow: hidden;
        border-radius: 0;
        box-shadow: var(--shadow-elevation-medium);
        
        @media (min-width: 768px) {
            border-radius: var(--radius);
        }
    }

    figure.image > img {
        object-fit: cover;
        object-position: top center;
        width: 100%;
        height: 100%;
    }


    ul.categories {
        display: flex;
        flex-wrap: wrap;
        gap: 0.25rem 0.5rem;

        list-style: none;
        font-size: var(--step-0);


        li {
            background: var(--clr-white);
            cursor: pointer;
            border-radius: var(--radius);
            padding: 0.2rem 0.25rem;
            box-shadow: var(--shadow-elevation-low);
        }
    }


    article.author {
        --image-size: 40px;
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: 0.5rem;
        
        strong {
            // font-size: var(--step-2);
            font-weight: bold;
            text-decoration: underline;
        }
    }


    figure.author-image {
        --radius: 50%;
        position: relative;
        width: var(--image-size, 50px);
        border-radius: var(--radius);
        outline: 1px solid var(--clr-white);
        outline-offset: -5px;
        aspect-ratio: 1;
        overflow: hidden;
        isolation: isolate;




        img {
            object-fit: cover;
            width: 100%;
            height: 100%;
        }
    }


    time {
        font-style: italic;
    }


    // Spacing
    & > figure.image, & > p   {
        margin-bottom: var(--_spacer);
    }

    & > p {
        margin-bottom: calc(var(--_spacer) * 2);
    }
    

}
</style>
